# name: CI

# on: 
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master
# jobs:
#   publish:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#       id-token: write
#     steps:
#       - name: Clean
#         run: sudo rm -rf $PWD/* $PWD/.[!.]*
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Use Node 20.8.1
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20.8.1

#       - name: Configure .npmrc for both GitHub Packages and npm
#         run: |
#           echo "@ishwar:registry=https://npm.pkg.github.com/" > ~/.npmrc
#           echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
#           echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
#           echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
        
#       - name: Install dependencies
#         run: | 
#           npm ci 

#       - name: Build
#         run: |
#           npm run build
      
#       - name: Publish to GitHub Packages
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
#         run: npm publish --registry=https://npm.pkg.github.com/

#       - name: Publish to npm
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
#         run: npm publish
#       # - name: Authenticate with npm Registry
#       #   run: npm config set '//npm.pkg.github.com/:_authToken' ${{ secrets.GH_TOKEN }}
#       # - name: Semantic release
#       #   env:
#       #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#       #     NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
#       #   run: npx semantic-release
#       # - name: Publish package
#       #   env:
#       #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
#       #   run: |
#       #     npm publish
#       - name: get version
#         id: version
#         uses: notiz-dev/github-action-json-property@release
#         with:
#           path: "package.json"
#           prop_path: "version"
#       - run: |
#           echo "PACKAGE_VERSION=${{steps.version.outputs.prop}}" >> $GITHUB_ENV
#       - uses: avakar/tag-and-release@v1
#         with:
#           tag_name: ${{steps.version.outputs.prop}}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}


name: CI

on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Clean
        run: sudo rm -rf $PWD/* $PWD/.[!.]*

      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node 20.8.1
        uses: actions/setup-node@v3
        with:
          node-version: 20.8.1

      - name: Configure .npmrc for both GitHub Packages and npm
        run: |
          echo "@ishwar:registry=https://npm.pkg.github.com/" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
        
      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
      
      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm publish --registry=https://npm.pkg.github.com/

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm publish --registry=https://registry.npmjs.org/

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "package.json"
          prop_path: "version"

      - run: |
          echo "PACKAGE_VERSION=${{ steps.version.outputs.prop }}" >> $GITHUB_ENV

      - uses: avakar/tag-and-release@v1
        with:
          tag_name: ${{ steps.version.outputs.prop }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
